//Эта программа находит корни квадратного уравнения
#include <iostream>
#include <cmath>

int main()
{
    setlocale(LC_ALL, "Russian");
    system("chcp 1251");
    std::cout << "Эта программа находит корни квадратного уравнения.\n";
    float a;
    std::cout << "Введите, пожалуйста, первый коэффициент из диапазона, кроме ноля [-127..128]: а = ";
    std::cin >> a;
    int i = 0;
    //Проверяем первый коэффициент в диапазоне и предоставляем три попытки ввода
    while ((a < -127) || (a > 128) || (a == 0))
    {

        std::cout << "Вы ввели неправильное число. Попробуйте еще раз.\n";
        std::cout << "Введите, пожалуйста, первый коэффициент еще раз из диапазона, кроме ноля [-127..128]: а = ";
        std::cin >> a;
        ++i;
        std::cout << "i= " << i << std::endl;
        if (i >= 2)
        {
            std::cout << "Сожалеем, Вы использовали три попытки подряд неверно!\n";
            break;
        }
    }
    //Если все попытки ввода коэффициента неправильные, то останавливаем работу программы
    if (i >= 2)
        exit;
    //Если первый коэффициент внутри диапазона, то принимаем два оставшихся коэффициента
    else
    {
        float b;
        std::cout << "Введите, пожалуйста, второй коэффициент: b = ";
        std::cin >> b;
        float c;
        std::cout << "Введите, пожалуйста, третий коэффициент: c = ";
        std::cin >> c;
        std::cout << "a = " << a << "; " << "b = " << b << "; " << "c = " << c << "." << std::endl;
        const int m1{ 2 };
        const int m2{ 4 };
        //Вычисляем дискриминант
        float D;
        D = pow(b, 2) - m2 * a * c;
        float x1;
        float x2;
        //Проверяем дискриминант на соответствие нолю и находим корни
        if (D == 0)
        {
            std::cout << "Ответ: x1 = x2 = " << (-b) / (m1 * a) << std::endl;
        }
        else
            if (D > 0)
            {
                std::cout << "Ответ: x1 = " << ((-b) + sqrt(D)) / (m1 * a) << "; " << "x2 = " << ((-b) - sqrt(D)) / (m1 * a) << std::endl;
            }
            else
                std::cout << "Уравнение не имеет корней. Дискриминант D < 0." << std::endl;
    }
    return 0;
    }
